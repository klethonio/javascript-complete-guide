"use strict";(self.webpackChunkabout_tooling=self.webpackChunkabout_tooling||[]).push([[331],{331:(t,e,i)=>{i.r(e),i.d(e,{Tooltip:()=>l});class o{static templateCache={};constructor(t=null,e=!1){this.hostElement=t?document.getElementById(t):document.body,this.insertBefore=e}hide(){this.tooltipElement&&(this.overlay.style.display="",this.tooltipElement.remove())}position(){this.tooltipElement.style.position="absolute";const t=(this.hostElement.clientWidth-this.tooltipElement.clientWidth)/2,e=(this.hostElement.clientHeight-this.tooltipElement.clientHeight)/2;this.tooltipElement.style.left=`${t}px`,this.tooltipElement.style.top=`${e}px`}async getTemplate(t,e){if(!o.templateCache[t]){const i=await fetch(t),l=await i.text(),s=(new DOMParser).parseFromString(l,"text/html");o.templateCache[t]=s.querySelector(`#${e}`)}if(!o.templateCache[t])throw new Error(`Template with ID ${e} not found in templates.html`);return o.templateCache[t].content.cloneNode(!0)}render(){this.hostElement.insertAdjacentElement(this.insertBefore?"afterbegin":"beforeend",this.tooltipElement),this.overlay=this.overlay||this.tooltipElement.previousElementSibling,this.overlay.addEventListener("click",this.closeTooltip.bind(this)),this.overlay.style.display="block",this.position()}}class l extends o{constructor(t,e,i){super(i),this.closeNotifier=t,this.text=e,console.log("Do something...")}closeTooltip=()=>{this.hide(),this.closeNotifier()};async buildElement(){const t=document.createElement("div");t.className="card";const e=await this.getTemplate("assets/templates.html","tooltip"),i=document.importNode(e,!0);i.querySelector("p").textContent=this.text,t.append(i),t.addEventListener("click",this.closeTooltip),this.tooltipElement=t}async render(){await this.buildElement(),super.render()}}}}]);